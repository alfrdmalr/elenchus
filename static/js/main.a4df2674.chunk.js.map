{"version":3,"sources":["Pupil.tsx","AddPupil.tsx","Roll.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["PupilItem","props","last","first","penalty","undefined","ChosenPupil","onClick","penalize","absolve","AddPupil","useState","setFirst","setLast","type","value","onChange","e","target","addPupil","BulkAddPupil","list","setList","str","names","split","fullname","pair","length","Error","whitespaceRegex","trimmedLast","replace","trimmedFirst","bulkAdd","Roll","initialPupils","pupils","setPupils","penaltyIncrement","reduce","total","curPupil","penaltyTotal","setPenaltyTotal","penaltyMode","chosen","setChosen","pupil","concat","pickPupil","pickRandomly","weightedRoll","unpenalized","penalized","push","weightedArray","i","generateWeightedArr","firstPass","arr","Math","floor","random","style","display","flexDirection","justifyContent","map","p","App","className","href","padding","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a4df2674.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport interface Pupil {\r\n  first: string;\r\n  last: string;\r\n  penalty?: number;\r\n}\r\n\r\nexport interface PupilProps extends Pupil {\r\n  penalize: () => void;\r\n  absolve: () => void;\r\n}\r\n\r\nexport function PupilItem(props: Pupil) {\r\n  return (\r\n    <div>\r\n      <p>{props.last}, {props.first} {props.penalty ? `(${props.penalty})` : undefined}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function ChosenPupil(props: PupilProps) {\r\n  return (\r\n    <div>\r\n      <p>{props.first} {props.last}</p>\r\n      <p>Current Penalty: {props.penalty || \"0\"}</p>\r\n      <button onClick={props.penalize}>penalize</button>\r\n      <button onClick={props.absolve}>absolve</button>\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { Pupil } from './Pupil';\r\n\r\nexport interface AddPupilProps {\r\n  addPupil: (p: Pupil) => void\r\n}\r\n\r\nexport function AddPupil(props: AddPupilProps) {\r\n  const [first, setFirst] = useState<string>(\"\");\r\n  const [last, setLast] = useState<string>(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        First Name: <input type=\"text\" value={first} onChange={e => setFirst(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        Last Name: <input type=\"text\" value={last} onChange={e => setLast(e.target.value)} />\r\n      </div>\r\n\r\n      <button onClick={() => props.addPupil({ first: first, last: last })}>add student</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function BulkAddPupil(props: AddPupilProps) {\r\n  const [list, setList] = useState<string>(\"\");\r\n  const bulkAdd = (str: string) => {\r\n    const names: string[] = str.split(';');\r\n    for (const fullname of names) {\r\n      if (fullname === \"\") {\r\n        continue;\r\n      }\r\n      const pair = fullname.split(',');\r\n\r\n      if (pair.length !== 2) {\r\n        throw new Error('invalid format')\r\n      }\r\n\r\n      const last = pair[0]\r\n      const first = pair[1]\r\n      const whitespaceRegex = /^\\s+|\\s+$/\r\n      const trimmedLast = last.replace(whitespaceRegex, '');\r\n      const trimmedFirst = first.replace(whitespaceRegex, '');\r\n      props.addPupil({ first: trimmedFirst, last: trimmedLast })\r\n    }\r\n\r\n    //do some regex parsing and then add for each student name\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <p>\r\n        To bulk add students, separate last and first names by comma and students by semicolon\r\n      like: <code>\"Smith,John;Doe,Jane;Hyphenated-Surname,Bobby\"</code>\r\n      </p>\r\n      <input type=\"text\" value={list} onChange={e => setList(e.target.value)} />\r\n      <button onClick={() => bulkAdd(list)}>bulk add</button>\r\n    </div>\r\n  )\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Pupil, PupilItem, ChosenPupil } from './Pupil';\r\nimport { AddPupil, BulkAddPupil } from './AddPupil';\r\n\r\ninterface RollProps {\r\n  initialPupils: Pupil[];\r\n}\r\n\r\nexport function Roll(props: RollProps) {\r\n  const [pupils, setPupils] = useState<Pupil[]>(props.initialPupils);\r\n  const [penaltyIncrement, setPenaltyIncrement] = useState<number>(5);\r\n  const [penaltyTotal, setPenaltyTotal] = useState<number>(\r\n    // compute the initial penalty total from the initial students' predefined penalties\r\n    props.initialPupils.reduce<number>((total, curPupil) => total + (curPupil.penalty || 0), 0)\r\n  );\r\n  const [penaltyMode, setPenaltyMode] = useState<boolean>(true);\r\n  const [chosen, setChosen] = useState<Pupil | null>(null);\r\n\r\n  const addPupil = (pupil: Pupil) => {\r\n    setPupils(pupils => pupils.concat(pupil));\r\n  }\r\n\r\n  const generateWeightedArr = (): Array<Pupil[]> => {\r\n    let unpenalized = [];\r\n    let penalized = [];\r\n\r\n    for (const pupil of pupils) {\r\n      if (pupil.penalty) { // 0 is falsey\r\n        penalized.push(pupil)\r\n      } else {\r\n        unpenalized.push(pupil);\r\n      }\r\n    }\r\n\r\n    let weightedArray: Array<Pupil[]> = [];\r\n    for (const pupil of penalized) {\r\n      // casting since we added to penalty based on whether penalty was a number\r\n      for (let i = 0; i < (pupil.penalty as number); i++) {\r\n        weightedArray.push([pupil]);\r\n      }\r\n    }\r\n\r\n    if (penaltyTotal > 100 || unpenalized.length === 0) {\r\n      return weightedArray;\r\n    }\r\n\r\n    // add a reference to the whole group at once\r\n    for (let i = weightedArray.length; i < 100; i++) {\r\n      weightedArray.push(unpenalized);\r\n    }\r\n\r\n    return weightedArray;\r\n  }\r\n\r\n  const pickPupil = (): Pupil => {\r\n    if (!penaltyMode) {\r\n      return pickRandomly(pupils);\r\n    }\r\n\r\n    const weightedRoll: Array<Pupil[]> = generateWeightedArr();\r\n    const firstPass: Pupil[] = pickRandomly(weightedRoll);\r\n    const secondPass: Pupil = pickRandomly(firstPass);\r\n\r\n    return secondPass;\r\n  }\r\n\r\n  // using trailing comma syntax to define a generic type and not JSX expression\r\n  const pickRandomly = <T,>(arr: T[]): T => {\r\n    if (arr.length === 0) {\r\n      throw new Error('invalid array to choose from');\r\n    }\r\n\r\n    if (arr.length === 1) {\r\n      return arr[0];\r\n    }\r\n\r\n    const r = Math.floor(Math.floor(Math.random() * arr.length));\r\n    return arr[r];\r\n  }\r\n\r\n  const clearPenalty = (pupil: Pupil): void => {\r\n    if (pupil.penalty) {\r\n      setPenaltyTotal(penaltyTotal - (pupil.penalty))\r\n      pupil.penalty = 0;\r\n    }\r\n  }\r\n\r\n  const penalize = (pupil: Pupil): void => {\r\n    if (!pupil.penalty) {\r\n      pupil.penalty = 0;\r\n    }\r\n\r\n    // add max penalty logic?\r\n    pupil.penalty += penaltyIncrement;\r\n    setPenaltyTotal(penaltyTotal + penaltyIncrement);\r\n  }\r\n\r\n  return (<div style={{display: 'flex', flexDirection: 'column'}}>\r\n    <hr />\r\n    <div style={{ display: 'flex' }}>\r\n      <AddPupil\r\n        addPupil={addPupil}\r\n      />\r\n\r\n      <BulkAddPupil\r\n        addPupil={addPupil}\r\n      />\r\n\r\n    </div>\r\n    <hr />\r\n    <button onClick={() => setChosen(pickPupil())}>Select Student</button>\r\n    <div style={{ display: 'flex', justifyContent: 'space-around' }}>\r\n      <div>\r\n        <h2>All Students</h2>\r\n        {pupils.map(p => (\r\n          <PupilItem\r\n            {...p}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <div>\r\n        <h2>Selected Student</h2>\r\n        {chosen !== null &&\r\n          <ChosenPupil\r\n            {...chosen}\r\n            penalize={() => penalize(chosen)}\r\n            absolve={() => clearPenalty(chosen)}\r\n          />\r\n        }\r\n\r\n      </div>\r\n    </div>\r\n\r\n\r\n  </div>\r\n  )\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport { Pupil } from './Pupil';\r\nimport { Roll } from './Roll'\r\nimport { AddPupil } from './AddPupil';\r\n\r\nlet names: Pupil[] = [\r\n  { first: \"John\", last: \"Doe\" },\r\n  { first: \"Jane\", last: \"Deer\", },// penalty: 60},\r\n  { first: \"Ray\", last: \"Sun\", },//penalty: 50},\r\n  { first: \"in\", last: \"trouble\" },//, penalty: 50}\r\n]\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1><i><a href=\"https://en.wikipedia.org/wiki/Socratic_method\">elenchus</a></i></h1>\r\n      <div style={{padding: '0 15rem'}}>\r\n        <Roll\r\n          initialPupils={names}\r\n        />\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}